{"version":3,"sources":["themes.ts","components/App/index.ts","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["lightTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","darkTheme","App","useState","useDarkMode","setUseDarkMode","ThemeProvider","applyTo","theme","Stack","Item","PrimaryButton","text","onClick","alert","Toggle","label","onText","offText","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAaA,EAAa,CAEtBC,QAAS,CACLC,aAAc,UACdC,gBAAiB,UACjBC,aAAc,UACdC,WAAY,UACZC,cAAe,UACfC,eAAgB,UAChBC,aAAc,UACdC,UAAW,UACXC,YAAa,UACbC,kBAAmB,UACnBC,eAAgB,UAChBC,aAAc,UACdC,qBAAsB,UACtBC,kBAAmB,UACnBC,mBAAoB,UACpBC,gBAAiB,UACjBC,iBAAkB,UAClBC,kBAAmB,UACnBC,eAAgB,UAChBC,YAAa,UACbC,MAAO,UACPC,MAAO,YAMFC,EAAY,CAErBvB,QAAS,CACLC,aAAc,UACdC,gBAAiB,UACjBC,aAAc,UACdC,WAAY,UACZC,cAAe,UACfC,eAAgB,UAChBC,aAAc,UACdC,UAAW,UACXC,YAAa,UACbC,kBAAmB,UACnBC,eAAgB,UAChBC,aAAc,UACdC,qBAAsB,UACtBC,kBAAmB,UACnBC,mBAAoB,UACpBC,gBAAiB,UACjBC,iBAAkB,UAClBC,kBAAmB,UACnBC,eAAgB,UAChBC,YAAa,UACbC,MAAO,UACPC,MAAO,Y,QCnDCE,ECCM,WAAO,IAAD,EACYC,oBAAS,GADrB,mBACnBC,EADmB,KACNC,EADM,KAE1B,OACE,cAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,MAAOJ,EAAcH,EAAYxB,EAFnC,SAIE,eAACgC,EAAA,EAAD,WACE,cAACA,EAAA,EAAMC,KAAP,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,QAAS,kBAAMC,MAAM,sBAGzB,cAACL,EAAA,EAAMC,KAAP,UACE,cAACK,EAAA,EAAD,CACEC,MAAM,gBACNC,OAAO,YAAYC,QAAQ,aAC3BC,SAAU,kBAAMd,GAAgBD,cCR7BgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.816598ba.chunk.js","sourcesContent":["export const lightTheme = {\r\n\r\n    palette: {\r\n        themePrimary: '#128712',\r\n        themeLighterAlt: '#f1faf1',\r\n        themeLighter: '#cbeccb',\r\n        themeLight: '#a2dba2',\r\n        themeTertiary: '#58b758',\r\n        themeSecondary: '#239623',\r\n        themeDarkAlt: '#107a10',\r\n        themeDark: '#0d670d',\r\n        themeDarker: '#0a4c0a',\r\n        neutralLighterAlt: '#faf9f8',\r\n        neutralLighter: '#f3f2f1',\r\n        neutralLight: '#edebe9',\r\n        neutralQuaternaryAlt: '#e1dfdd',\r\n        neutralQuaternary: '#d0d0d0',\r\n        neutralTertiaryAlt: '#c8c6c4',\r\n        neutralTertiary: '#a19f9d',\r\n        neutralSecondary: '#605e5c',\r\n        neutralPrimaryAlt: '#3b3a39',\r\n        neutralPrimary: '#323130',\r\n        neutralDark: '#201f1e',\r\n        black: '#000000',\r\n        white: '#ffffff',\r\n      }\r\n\r\n\r\n\r\n};\r\nexport const darkTheme = {\r\n\r\n    palette: {\r\n        themePrimary: '#0dbd0d',\r\n        themeLighterAlt: '#f3fcf3',\r\n        themeLighter: '#d0f4d0',\r\n        themeLight: '#aaebaa',\r\n        themeTertiary: '#5fd75f',\r\n        themeSecondary: '#24c524',\r\n        themeDarkAlt: '#0caa0c',\r\n        themeDark: '#0a8f0a',\r\n        themeDarker: '#076a07',\r\n        neutralLighterAlt: '#323232',\r\n        neutralLighter: '#313131',\r\n        neutralLight: '#2f2f2f',\r\n        neutralQuaternaryAlt: '#2c2c2c',\r\n        neutralQuaternary: '#2a2a2a',\r\n        neutralTertiaryAlt: '#282828',\r\n        neutralTertiary: '#c8c8c8',\r\n        neutralSecondary: '#d0d0d0',\r\n        neutralPrimaryAlt: '#dadada',\r\n        neutralPrimary: '#ffffff',\r\n        neutralDark: '#f4f4f4',\r\n        black: '#f8f8f8',\r\n        white: '#333333',\r\n    }\r\n\r\n\r\n};","\r\n\r\n import App from './App';\r\n export default App;\r\n\r\n\r\n","import React, { useState } from 'react';\nimport { ThemeProvider } from '@fluentui/react-theme-provider';\nimport { PrimaryButton, Stack, Toggle } from '@fluentui/react';\nimport { darkTheme, lightTheme } from '../../themes';\nconst App: React.FC = () => {\n  const [useDarkMode, setUseDarkMode] = useState(false);\n  return (\n    <ThemeProvider\n      applyTo=\"body\"\n      theme={useDarkMode ? darkTheme : lightTheme}\n    >\n      <Stack>\n        <Stack.Item>\n          <PrimaryButton\n            text=\"Alert\"\n            onClick={() => alert('I am an alert')}\n          />\n        </Stack.Item>\n        <Stack.Item>\n          <Toggle\n            label=\"Change themes\"\n            onText=\"Dark Mode\" offText=\"Light Mode\"\n            onChange={() => setUseDarkMode(!useDarkMode)}\n          />\n        </Stack.Item>\n      </Stack>\n    </ThemeProvider>\n  )\n}\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}